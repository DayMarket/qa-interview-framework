plugins {
    id 'java'
}

wrapper {
    gradleVersion = '8.10.2'
}

repositories {
    mavenCentral()
}

group = 'uz.daymarket.qa_interview_framework'
version = '1.0-SNAPSHOT'

def allureVersion = '2.29.0'
def aspectJVersion = '1.9.22'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    options.compilerArgs.add('-parameters')
}

configurations {
    agent {
        canBeResolved = true
        canBeConsumed = true
    }
}

dependencies {

    agent "org.aspectj:aspectjweaver:$aspectJVersion"



    implementation platform("io.qameta.allure:allure-bom:$allureVersion")
    implementation "io.qameta.allure:allure-junit5"

    testImplementation platform("org.junit:junit-bom:5.11.3")
    testImplementation "org.junit.jupiter:junit-jupiter-api"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"

    implementation "ch.qos.logback:logback-classic:1.4.14"
    implementation("com.squareup.okhttp3:okhttp:5.1.0")
    implementation 'io.qameta.allure:allure-okhttp3:2.24.0'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.20.0'
    implementation("org.assertj:assertj-core:3.27.3")

    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'

    implementation("io.qameta.allure:allure-assertj:2.30.0")
    runtimeOnly("org.aspectj:aspectjweaver:1.9.24")
}

jar {
    manifest {
        attributes(
                "Automatic-Module-Name": "io.qameta.allure.okhttp"
        )
    }
}

test {
    ignoreFailures = true
    useJUnitPlatform()
    jvmArgs = [ "-javaagent:${configurations.agent.singleFile}" ]
    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
        showStandardStreams = true
    }

    systemProperty("junit.jupiter.extensions.autodetection.enabled", "true")
    systemProperty("junit.jupiter.execution.parallel.enabled", "true")
    systemProperty("junit.jupiter.execution.parallel.mode.default", "concurrent")
    systemProperty("junit.jupiter.execution.parallel.mode.classes.default", "concurrent")
    systemProperty("junit.jupiter.execution.parallel.config.strategy", "fixed")
    systemProperty("junit.jupiter.execution.parallel.config.fixed.parallelism", "12")
    systemProperty("junit.jupiter.execution.parallel.config.fixed.max-pool-size", "12")
}
